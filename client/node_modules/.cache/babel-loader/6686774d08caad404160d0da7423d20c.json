{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\upload\\\\upload1\\\\tech\\\\dev\\\\chat-app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport './Chat.css'; // const ENDPOINT = 'https://project-chat-application.herokuapp.com/';\n\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) alert(error);\n    }); // return statements are used for unmounting\n\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', messgae => {\n      setMessages([...messages, messgae]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"NKZGbzfWHlS0Y+OfA88k1uWyNPI=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["D:/upload/upload1/tech/dev/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","TextContainer","Messages","InfoBar","Input","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","alert","off","on","messgae","sendMessage","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from 'query-string';\r\nimport io from \"socket.io-client\";\r\n\r\nimport TextContainer from '../TextContainer/TextContainer';\r\nimport Messages from '../Messages/Messages';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\n\r\nimport './Chat.css';\r\n\r\n// const ENDPOINT = 'https://project-chat-application.herokuapp.com/';\r\n\r\nlet socket;\r\n\r\n\r\nconst Chat = ({location}) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [users, setUsers] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const ENDPOINT = 'localhost:5000';\r\n\r\n\r\n    useEffect(() => {\r\n        const {name, room} = queryString.parse(location.search);\r\n        socket = io(ENDPOINT);\r\n        setName(name);\r\n        setRoom(room);\r\n \r\n        socket.emit('join', {name, room},(error)=>{\r\n            if(error) alert(error);\r\n        });\r\n        // return statements are used for unmounting\r\n        return () => {\r\n            socket.emit('disconnect');\r\n            socket.off();\r\n        }\r\n    },[ENDPOINT,location.search])\r\n\r\n    useEffect(()=>{\r\n        socket.on('message', (messgae)=>{\r\n            setMessages([...messages,messgae]);\r\n        })\r\n        socket.on(\"roomData\", ({ users }) => {\r\n            setUsers(users);\r\n          });\r\n    },[messages])\r\n\r\n    const sendMessage = (event) =>{\r\n        event.preventDefault();\r\n        if(message){\r\n            socket.emit('sendMessage', message , ()=>setMessage(''));\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"outerContainer\">\r\n        <div className=\"container\">\r\n            <InfoBar room={room} />\r\n            <Messages messages={messages} name={name} />\r\n            <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n        </div>\r\n        <TextContainer users={users}/>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Chat; "]},"metadata":{},"sourceType":"module"}
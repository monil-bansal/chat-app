{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\upload\\\\upload1\\\\tech\\\\dev\\\\chat-app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) alert(error);\n    }); // return statements are used for unmounting\n\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', messgae => {\n      setMessages([...messages, messgae]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message);\n  console.log(messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"M7DGl/NqV6luCY8IpJPKHYFo+ZU=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["D:/upload/upload1/tech/dev/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","alert","off","on","messgae","sendMessage","event","preventDefault","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMiB,QAAQ,GAAG,gBAAjB;AAGAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAACQ,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAeT,WAAW,CAACgB,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAArB;AACAb,IAAAA,MAAM,GAAGH,EAAE,CAACc,QAAD,CAAX;AACAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAACX,MAAAA,IAAD;AAAOE,MAAAA;AAAP,KAApB,EAAkCU,KAAD,IAAS;AACtC,UAAGA,KAAH,EAAUC,KAAK,CAACD,KAAD,CAAL;AACb,KAFD,EANY,CASZ;;AACA,WAAO,MAAM;AACTf,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AACAd,MAAAA,MAAM,CAACiB,GAAP;AACH,KAHD;AAIH,GAdQ,EAcP,CAACN,QAAD,EAAUT,QAAQ,CAACW,MAAnB,CAdO,CAAT;AAgBAlB,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,MAAM,CAACkB,EAAP,CAAU,SAAV,EAAsBC,OAAD,IAAW;AAC5BT,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaU,OAAb,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIP,CAACV,QAAD,CAJO,CAAT;;AAMA,QAAMW,WAAW,GAAIC,KAAD,IAAU;AAC1BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGf,OAAH,EAAW;AACPP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BP,OAA3B,EAAqC,MAAIC,UAAU,CAAC,EAAD,CAAnD;AACH;AACJ,GALD;;AAMAe,EAAAA,OAAO,CAACC,GAAR,CAAYjB,OAAZ;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAG,gBAAjB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAIJ;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAjDD;;GAAMJ,I;;KAAAA,I;AAoDN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react' ;\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\nimport './Chat.css'\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\n\r\nlet socket;\r\n\r\nconst Chat = ({location}) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const ENDPOINT = 'localhost:5000';\r\n\r\n\r\n    useEffect(() => {\r\n        const {name, room} = queryString.parse(location.search);\r\n        socket = io(ENDPOINT);\r\n        setName(name);\r\n        setRoom(room);\r\n \r\n        socket.emit('join', {name, room},(error)=>{\r\n            if(error) alert(error);\r\n        });\r\n        // return statements are used for unmounting\r\n        return () => {\r\n            socket.emit('disconnect');\r\n            socket.off();\r\n        }\r\n    },[ENDPOINT,location.search])\r\n\r\n    useEffect(()=>{\r\n        socket.on('message', (messgae)=>{\r\n            setMessages([...messages,messgae]);\r\n        })\r\n    },[messages])\r\n\r\n    const sendMessage = (event) =>{\r\n        event.preventDefault();\r\n        if(message){\r\n            socket.emit('sendMessage', message , ()=>setMessage(''));\r\n        }\r\n    }\r\n    console.log(message);\r\n    console.log(messages);\r\n    return (\r\n        <div className = \"outerContainer\">   \r\n            <div className = \"container\">\r\n                <InfoBar room = {room} />\r\n                <Input />\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    \r\n}\r\n\r\n\r\nexport default Chat; "]},"metadata":{},"sourceType":"module"}